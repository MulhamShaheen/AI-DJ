import os
import json
from yandex_music import Client
from yandex_music.exceptions import NotFoundError

import csv
import datetime

with open('token.json', 'r') as fp:
    TOKEN = json.load(fp)["yt_token"]

client = Client(TOKEN).init()

type_to_name = {
    'track': '—Ç—Ä–µ–∫',
    'artist': '–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
    'album': '–∞–ª—å–±–æ–º',
    'playlist': '–ø–ª–µ–π–ª–∏—Å—Ç',
    'video': '–≤–∏–¥–µ–æ',
    'user': '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    'podcast': '–ø–æ–¥–∫–∞—Å—Ç',
    'podcast_episode': '—ç–ø–∏–∑–æ–¥ –ø–æ–¥–∫–∞—Å—Ç–∞',
}


def search_playlists(query):
    search_result = client.search(query).playlists
    results = []
    writer = csv.writer(open("yandex.csv", "a+", newline="", encoding="utf-8"))

    for result in search_result.results:
        playlist = result.fetch_tracks()

        for track_short in playlist:
            track = track_short.track
            artists = track.artists
            album = track.albums[0]
            info = {
                "id": track.id,
                "title": track.title,
                "artists": ', '.join(artist.name for artist in artists),
                "album": album.title,
                "album_id": album.id,
                "time": datetime.datetime.now(),
            }

            writer.writerow(list(info.values()))
            results.append(info)

    return results


def send_search_request_and_print_result(query):
    search_result = client.search(query)

    text = [f'–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}":', '']

    best_result_text = ''
    if search_result.best:
        type_ = search_result.best.type
        best = search_result.best.result

        text.append(f'‚ùóÔ∏è–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {type_to_name.get(type_)}')

        if type_ in ['track', 'podcast_episode']:
            artists = ''
            if best.artists:
                artists = ' - ' + ', '.join(artist.name for artist in best.artists)
            best_result_text = best.title + artists
        elif type_ == 'artist':
            best_result_text = best.name
        elif type_ in ['album', 'podcast']:
            best_result_text = best.title
        elif type_ == 'playlist':
            best_result_text = best.title
        elif type_ == 'video':
            best_result_text = f'{best.title} {best.text}'

        text.append(f'–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {best_result_text}\n')

    if search_result.artists:
        text.append(f'–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π: {search_result.artists.total}')
    if search_result.albums:
        text.append(f'–ê–ª—å–±–æ–º–æ–≤: {search_result.albums.total}')
    if search_result.tracks:
        text.append(f'–¢—Ä–µ–∫–æ–≤: {search_result.tracks.total}')
    if search_result.playlists:
        text.append(f'–ü–ª–µ–π–ª–∏—Å—Ç–æ–≤: {search_result.playlists.total}')
    if search_result.videos:
        text.append(f'–í–∏–¥–µ–æ: {search_result.videos.total}')

    text.append('')
    print('\n'.join(text))


def get_album(id):
    album = client.albums_with_tracks(id)
    tracks = []
    for i, volume in enumerate(album.volumes):
        if len(album.volumes) > 1:
            tracks.append(f'üíø –î–∏—Å–∫ {i + 1}')
        tracks += volume

    text = '–ê–õ–¨–ë–û–ú\n\n'
    text += f'{album.title}\n'
    text += f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {', '.join([artist.name for artist in album.artists])}\n"
    text += f'{album.year} ¬∑ {album.genre}\n'

    cover = album.cover_uri
    if cover:
        text += f'–û–±–ª–æ–∂–∫–∞: {cover.replace("%%", "400x400")}\n\n'

    text += '–°–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤:'

    print(text)

    for track in tracks:
        if isinstance(track, str):
            print(track)
        else:
            artists = ''
            if track.artists:
                artists = ' - ' + ', '.join(artist.name for artist in track.artists)
            print(track.title + artists)

    return album, tracks


def get_lyrics(song_id: int) -> str:
    track = client.tracks(song_id)[0]
    try:
        lyrics = track.get_lyrics()
        text = lyrics.fetch_lyrics()
        return text

    except NotFoundError:
        print('–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')


if __name__ == '__main__':
    while True:
        input_query = input('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å: ')
        get_lyrics(int(input_query))
